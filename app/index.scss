@use "sass:string";
@import '~animate.css/animate.min.css';
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;800&family=Raleway:wght@100;700&display=swap');

* {
  box-sizing: border-box;
  outline: rgba(0, 0, 0, 0.4);
}

$fontWeight: (
  'thin': 100,
  'bold': 700,
  'medium': 500,
  'light': 300,
);

$colorPaletteDark: (
  background: #16161a,
  backgroundLighter: #242629,
  backgroundDarker: #010101,
  baseColor: #7f5af0,
  whiteOrBlack: #fffffe,
  gray: #94a1b2,
  grayLight: #d4c7fa,
  accentColor: #2cb67d,
);

$colorPaletteLight: (
  background: #ebebeb,
  backgroundLighter: #fffffe,
  backgroundDarker: #d6d6d6,
  baseColor: #6246ea,
  whiteOrBlack: #16161a,
  gray: #d1d1e9,
  grayLight: #d4c7fa,
  accentColor: #e45858,
);

$NotificationStorePositions: 'top-left', 'top-right', 'bottom-left',
  'bottom-right';

// Note accent font is Raleway thin (font-weight: 100)
$primaryFont: 'Raleway' sans-serif;
$secondaryFont: 'Open Sans' sans-serif;

:root {
  --primaryFont: 'Raleway' sans-serif;
  --secondaryFont: 'Open Sans' sans-serif;
  --thin: 100;
  --bold: 700;
  --medium: 500;
  --light: 300;
}

html,
body,
#root,
.container {
  width: 100%;
  height: 100vh;
  position: relative;
}

body {
  margin: 0;
  padding: 0;
  font-kerning: normal;
  font-display: swap;
  font-family: $secondaryFont;
}

.error {
  color: red;
  margin: 0;
}

div.theme-dark {
  .nav-item {
    transition: color 0.3s ease;
    color: change-color(
      $color: map-get($colorPaletteDark, whiteOrBlack),
      $alpha: 0.3
    );
  }
  .nav-item:hover,
  .nav-item:active,
  .active-page {
    color: map-get($colorPaletteDark, whiteOrBlack);
  }
}

div.theme-light {
  .nav-item {
    transition: color 0.3s ease;
    color: change-color(
      $color: map-get($colorPaletteLight, whiteOrBlack),
      $alpha: 0.3
    );
  }
  .nav-item:hover,
  .nav-item:active,
  .active-page {
    color: map-get($colorPaletteLight, whiteOrBlack);
  }
}

@each $position in $NotificationStorePositions {
  $indexOfDash: string.index($position, '-');
  $firstProperty: string.slice($position, 1, $indexOfDash - 1);
  $lastProperty: string.slice($position, $indexOfDash + 1, -1);

  .#{string.unquote($position)} {
    #{string.unquote($firstProperty)}: 12px;
    #{string.unquote($lastProperty)}: 12px;
  }
}
